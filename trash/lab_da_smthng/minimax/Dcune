#include <cstdlib>
#include <iostream>
#include <stack>
#include <vector>
#include <stdio.h>
#include <queue>

using namespace std;

vector< vector<int> > edges;
vector<int> d;
vector<bool> used;
int n, m, k;

bool dfs(int v)
{
     if (used[v])
        return false;
     used[v] = true;
     for (int i = 0; i < edges[v].size(); i++)
     {
         int u = edges[v][i];
         if (d[u] == -1 || dfs(d[u]))
         {
            d[u] = v;
            return true;
         }
     }
     return false;
}

int main()
{
    freopen("matching.in", "r", stdin);
    freopen("matching.out", "w+", stdout);
    scanf("%d %d %d\n", &n, &m, &k);
    edges.resize(n + 1);
    int x, y;
    for (int i = 0; i < k; i++)
    {
       scanf("%d %d\n", &x, &y);
       edges[x].push_back(y);
    }
    d.resize(m + 1, -1);
    int c = 0;
    for (int i = 1; i <= n; i++)
    {
        used.clear();
        used.resize(n + 1, false);
        if (dfs(i))
           c++;
    }
    printf("%d", c);
    fclose(stdin);
    fclose(stdout);
    return 0;
}

